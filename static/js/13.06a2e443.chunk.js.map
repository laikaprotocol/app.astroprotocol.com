{"version":3,"sources":["utils/callHelpers.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/UnlockButton.tsx","hooks/useTokenBalance.ts","hooks/useApprove.ts","components/Input/Input.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","UnlockButton","TranslateString","useI18n","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","getContract","cakeABI","getCakeAddress","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","ethereum","fastRefresh","getTokenBalance","res","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useSousApprove","sousId","useSousChef","updateUserAllowance","useLotteryApprove","useCake","lotteryContract","useLottery","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","Wrapper","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","Title","Heading","attrs","as","tertiary","Blurb","Text","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","Math","floor","random","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","useLotteryAllowance","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","isSecondCard","CardHeader","TicketCountWrapper","fontSize","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","secondary","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","marginLeft","LayoutWrapper","StyledImage","HowItWorks","Link","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","href","formatLotteryDate","lotteryDate","date","dateString","toDateString","getUTCHours","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/13.06a2e443.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (ticketIssue.toString() === issueIdex) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIdex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIdex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\r\n    return amount / 1e18 / 10\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.tertiary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #000000 0%, #222b45 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(999, 'The AstroProtocol Lottery')}</Title>\r\n          <Blurb>{TranslateString(999, 'Buy tickets with ASTRO')}</Blurb>\r\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n        { /* <LotteryProgress /> */ }\r\n          <Title>{TranslateString(999, 'Drawing Every Monday at 8 PM EST')}</Title>\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(999, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              TREATS\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(999, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(453, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy('2500', numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > 25) {\r\n      setVal('25')\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * 2500\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"ASTRO\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(457, 'Your amount must be a multiple of 1')}</Tips>\r\n        <Tips>{TranslateString(457, '10 Tickets = 25 ASTRO')}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            457,\r\n            'Ticket purchases are final. Your ASTRO cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} TREATS`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          fullWidth\r\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your ASTRO will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button fullWidth onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useLotteryApprove } from 'hooks/useApprove'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const { onApprove } = useLotteryApprove()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"TREATS\" />)\r\n  const isDrawned = false;\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(999, 'Approve ASTRO')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {isDrawned ? (\r\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n  const isDrawned = false;\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {isDrawned ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Ticket sale resuming soon.')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem marginBottom=\"20px\">\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} ASTRO</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n  \r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n\t\t\t   <StyledHeading size=\"lg\" as=\"h3\" color=\"tertiary\">\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n\t\t\t   </StyledHeading>\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  {/* <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive /> */}\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  {/* <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive /> */}\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  {/* <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive /> */}\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  {/* <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive /> */}\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  {/* <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive /> */}\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  {/* <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive /> */}\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  {/* <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive /> */}\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  {/* <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive /> */}\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            {/* <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link> */}\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledImage src=\"/images/egg/8.svg\" alt=\"lottery bunny\" width={163} height={140} />\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"tertiary\">\r\n        {TranslateString(999, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend ASTRO to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n      {/* <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink> */}\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(999, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(999, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(999, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          {/* <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu> */}\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}